---
role_name_check: 1
dependency:
  name: galaxy
  options:
    ignore-certs: True
    role-file: requirements.yml
driver:
  name: podman
  options:
    D: true
    vv: true
scenario:
  test_sequence:
    - dependency
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - cleanup
    - destroy
platforms:
  - name: clickhouse-generic-podman-lighthouse
    image: debian:latest
    groups: ["clickhouse"]
    dockerfile: ../resources/Dockerfile.j2
    command: /sbin/init
    systemd: always
    extra_opts:
      - --pids-limit=-1
      - --memory=2G
      - --memory-swap=4G
      - --ipc=private
    capabilities:
      - CAP_SYS_NICE
      # - CAP_IPC_LOCK
    network: &network-name lighthouse-podman-generic
    subnet: 192.168.62.208/28
    ip: 192.168.62.210

  # - name: clickhouse-generic-podman-lighthouse
  #   image: docker.io/clickhouse/clickhouse-server:latest
  #   groups: ["none"]
  #   pre_build_image: True
  #   network: &network-name lighthouse-podman-generic
  #   subnet: 192.168.62.208/28
  #   ip: 192.168.62.210
  #   extra_opts:
  #     - --memory=2G
  #     - --memory-swap=4G
  #   volumes:
  #     - $PWD/molecule/resources/clickhouse-config/users.xml:/etc/clickhouse-server/users.d/users.xml
  #     - $PWD/molecule/resources/clickhouse-config/table.sh:/docker-entrypoint-initdb.d/table.sh
  #   env:
  #     CLICKHOUSE_DB: logs
  #   command: /entrypoint.sh

  - name: &generator-name lighthouse-generator-generic-podman
    image: registry.access.redhat.com/ubi9/ubi-init
    pre_build_image: True
    groups: ['vector']
    systemd: always
    command: /sbin/init
    network: *network-name
    hostname: *generator-name
    ip: 192.168.62.211
    extra_opts:
      - --memory=256M
      - --memory-swap=1G

  # - name: &alpine-name lighthouse-alpine-podman
  #   image: alpine:latest
  #   groups: ['lighthouse']
  #   dockerfile: ../resources/Dockerfile.j2
  #   env:
  #     ANSIBLE_USER: lighthouse
  #   # command: sh -c 'rc-status; cron -f' # will not work
  #   command: /sbin/init
  #   hostname: *alpine-name
  #   network: *network-name
  #   privileged: True
  #   ip: 192.168.62.212
  #   extra_opts:
  #     - --memory=256M
  #     - --memory-swap=1G

  - &podman-image
    name: &tumbleweed-name lighthouse-tumbleweed-podman
    image: opensuse/tumbleweed:latest
    groups: ['lighthouse']
    dockerfile: ../resources/Dockerfile.j2
    command: /sbin/init
    systemd: always
    env:
      ANSIBLE_USER: lighthouse
    hostname: *tumbleweed-name
    network: *network-name
    ip: 192.168.62.213
    extra_opts:
      - --memory=256M
      - --memory-swap=1G

  - <<: *podman-image
    name: &ubuntu-name lighthouse-ubuntu-podman
    image: ubuntu:latest
    hostname: *ubuntu-name
    ip: 192.168.62.214

  # - <<: *podman-image
  #   name: &fedora-name lighthouse-fedora-podman
  #   image: fedora:latest
  #   hostname: *fedora-name
  #   ip: 192.168.62.215

  - <<: *podman-image
    name: &stream9-name lighthouse-stream9-podman
    image: quay.io/centos/centos:stream9
    hostname: *stream9-name
    ip: 192.168.62.216

  - <<: *podman-image
    name: &debian-name lighthouse-debian-podman
    image: debian:latest
    hostname: *debian-name
    ip: 192.168.62.217

  - <<: *podman-image
    name: &leap-name lighthouse-leap-podman
    image: opensuse/leap:latest
    hostname: *leap-name
    ip: 192.168.62.218

provisioner:
  name: ansible
  config_options:
    tags:
      skip: docker
  options:
    vv: true
    D: true
  inventory:
    links:
      group_vars: ../resources/group_vars/
  playbooks:
    prepare: ../resources/playbooks/prepare.yaml
    converge: ../resources/playbooks/converge.yml
    cleanup: ../resources/playbooks/cleanup.yml
verifier:
  name: ansible
