
---
- name: Prepare users and groups
  hosts:
    - clickhouse
    - vector
    - lighthouse
  gather_facts: False
  tasks:
    - ansible.builtin.set_fact:
        gname: "{{ (group_names | first) if (group_names | first) != 'clickhouse' else 'some' }}"
    - ansible.builtin.debug:
        msg: "{{ ansible_host }}: gname={{ gname }}"
    - name: "Ensure ansible group is present"
      ansible.builtin.group:
        name: "{{ gname }}"
        state: present
    - name: "Ensure ansible user is created"
      ansible.builtin.user:
        name: "{{ gname }}"
        shell: /bin/bash
        group: "{{ gname }}"
    - name: "install required packages"
      ansible.builtin.package:
        name:
          - sudo
    - name: Ensure sudoers folder exists
      ansible.builtin.file:
        path: /etc/sudoers.d
        state: directory
        mode: "0755"
    - name: Ensure ansible sudoers file exists
      ansible.builtin.file:
        path: /etc/sudoers.d/ansible
        state: touch
        owner: "root"
        group: "root"
        mode: "0644"
    - name: "Ensure ansible group is in sudoers"
      ansible.builtin.lineinfile:
        line: "%{{ gname }} ALL=(ALL) NOPASSWD:ALL"
        path: /etc/sudoers.d/ansible

# Run these installations in prepare stage, since these are not main subjects of the testing
# When idempotence test invoked converge playbook will be run twice, And we don't need this
- name: Install Clickhouse
  hosts: clickhouse
  roles:
    - role: clickhouse
  tasks:
    - name: "Create table in clickhouse"
      ansible.builtin.command: |
        clickhouse-client -q "CREATE TABLE logs.datadog (
          appname String NOT NULL,
          facility String NOT NULL,
          hostname String NOT NULL,
          message String NOT NULL,
          msgid String NOT NULL,
          procid UInt32 NOT NULL,
          severity Enum8('debug' = 1, 'info', 'notice', 'warning', 'err', 'crit', 'alert', 'emerg'),
          timestamp DateTime64 NOT NULL,
          version UInt8 NOT NULL
        ) ENGINE Log"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc != 57
      changed_when: create_table.rc == 0

- name: Install Datadog Vector
  hosts: vector
  vars:
    ansible_user: vector
  pre_tasks:
    - name: Retrieve driver name (docker/podman)
      ansible.builtin.set_fact:
        driver_name: "{{ lookup('env', 'MOLECULE_DRIVER_NAME') }}"
    - name: Get clickhouse IP
      ansible.builtin.shell:
        cmd: > 
          {{ driver_name }} inspect $({{ driver_name }} ps --format '{{ "{{" }} .Names {{ "}}" }}' |
            grep clickhouse | grep {{ driver_name }} | grep lighthouse ) \
            --format '{{ "{{" }} range $name, $value := .NetworkSettings.Networks {{ "}}{{" }} $value.IPAddress {{ "}}{{" }} end {{ "}}" }}'
        executable: /bin/bash
      check_mode: false
      changed_when: false
      delegate_to: localhost
      run_once: true
      register: docker_command
    - name: Remember Clickhouse IP (1 address)
      ansible.builtin.set_fact:
        clickhouse_ip: "{{ docker_command.stdout_lines | first }}"
  roles:
    - role: vector-role
