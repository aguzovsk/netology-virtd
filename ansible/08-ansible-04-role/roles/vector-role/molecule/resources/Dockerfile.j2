{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

RUN if [ $(command -v apt-get) ]; then apt-get update && apt-get upgrade -y && apt-get install -y gpg python3-minimal python3-apt man systemd systemd-sysv rsyslog sudo bash ca-certificates iproute2 && apt-get clean; \
    elif [ $(command -v dnf) ]; then dnf makecache && dnf --assumeyes upgrade && dnf --assumeyes install systemd python3 python*-libdnf* sudo bash iproute && dnf clean all; \
    elif [ $(command -v zypper) ]; then zypper refresh && zypper install -y python312 sudo iproute2 systemd bash ca-certificates && zypper clean -a; \
    elif [ $(command -v apk) ]; then apk update && apk add --no-cache python3 sudo openrc ca-certificates && mkdir -p /run/openrc && touch /run/openrc/softlevel; \
    elif [ $(command -v xbps-install) ]; then xbps-install -Syu && xbps-install -y python sudo bash ca-certificates iproute2 && xbps-remove -O; fi; \
    if [ ! $(command -v apk) ]; then (cd /lib/systemd/system/sysinit.target.wants/; \
      for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
      rm -rf /lib/systemd/system/multi-user.target.wants/*; \
      rm -rf /etc/systemd/system/*.wants/*; \
      rm -rf /lib/systemd/system/local-fs.target.wants/*; \
      rm -rf /lib/systemd/system/sockets.target.wants/*udev*; \
      rm -rf /lib/systemd/system/sockets.target.wants/*initctl*; \
      rm -rf /lib/systemd/system/basic.target.wants/*; \
      rm -rf /lib/systemd/system/anaconda.target.wants/*; fi;

{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}

{% if item.env.ANSIBLE_USER is defined %}
RUN set -xe; \
  if [ $(command -v groupadd) ]; then groupadd ${ANSIBLE_USER} && \
  useradd -m -g ${ANSIBLE_USER} ${ANSIBLE_USER}; \
  else addgroup ${ANSIBLE_USER} && \
  adduser ${ANSIBLE_USER} -G ${ANSIBLE_USER} -D; fi; \
  echo "%${ANSIBLE_USER} ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/ansible
{% endif %}


CMD ["{{ item.command | default('/usr/sbin/init') }}"]
